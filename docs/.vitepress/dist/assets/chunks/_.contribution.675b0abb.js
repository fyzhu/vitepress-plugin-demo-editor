import{m as l}from"./editor.api.677082fc.js";var c=Object.defineProperty,d=(e,r,a)=>r in e?c(e,r,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[r]=a,i=(e,r,a)=>(d(e,typeof r!="symbol"?r+"":r,a),a);/*!-----------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Version: 0.33.0(4b1abad427e58dbedc1215d99a0902ffc885fcd4)
 * Released under the MIT license
 * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt
 *-----------------------------------------------------------------------------*/var u=Object.defineProperty,p=Object.getOwnPropertyDescriptor,y=Object.getOwnPropertyNames,P=Object.prototype.hasOwnProperty,f=(e,r,a,o)=>{if(r&&typeof r=="object"||typeof r=="function")for(let t of y(r))!P.call(e,t)&&(a||t!=="default")&&u(e,t,{get:()=>r[t],enumerable:!(o=p(r,t))||o.enumerable});return e},s={};f(s,l);var g={},n={},_=class{constructor(e){i(this,"_languageId"),i(this,"_loadingTriggered"),i(this,"_lazyLoadPromise"),i(this,"_lazyLoadPromiseResolve"),i(this,"_lazyLoadPromiseReject"),this._languageId=e,this._loadingTriggered=!1,this._lazyLoadPromise=new Promise((r,a)=>{this._lazyLoadPromiseResolve=r,this._lazyLoadPromiseReject=a})}static getOrCreate(e){return n[e]||(n[e]=new _(e)),n[e]}load(){return this._loadingTriggered||(this._loadingTriggered=!0,g[this._languageId].loader().then(e=>this._lazyLoadPromiseResolve(e),e=>this._lazyLoadPromiseReject(e))),this._lazyLoadPromise}};function h(e){const r=e.id;g[r]=e,s.languages.register(e);const a=_.getOrCreate(r);s.languages.registerTokensProviderFactory(r,{create:async()=>(await a.load()).language}),s.languages.onLanguage(r,async()=>{const o=await a.load();s.languages.setLanguageConfiguration(r,o.conf)})}export{h as r};
